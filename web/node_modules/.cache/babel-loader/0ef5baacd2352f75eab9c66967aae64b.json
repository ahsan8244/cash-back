{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\cash-back\\\\web\\\\src\\\\Components\\\\TripsForm.js\";\nimport React from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, Select, DatePicker, Icon, Avatar, Card } from 'antd';\nimport { Checkbox } from 'antd';\nconst CheckboxGroup = Checkbox.Group;\nconst Option = Select.Option;\nconst plainOptions = ['Breakfast', 'Lunch', 'Dinner', 'Flights', 'In-city Public Transport', 'In-city Private Transport', 'Drinks (Social)'];\nconst defaultCheckedList = ['Breakfast'];\n\nclass TripFormComp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false,\n      checkedList: defaultCheckedList,\n      indeterminate: true,\n      checkAll: false\n    };\n\n    this.onChange = checkedList => {\n      this.setState({\n        checkedList,\n        indeterminate: !!checkedList.length && checkedList.length < plainOptions.length,\n        checkAll: checkedList.length === plainOptions.length\n      });\n    };\n\n    this.onCheckAllChange = e => {\n      this.setState({\n        checkedList: e.target.checked ? plainOptions : [],\n        indeterminate: false,\n        checkAll: e.target.checked\n      });\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      style: {\n        width: \"fit-content\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showDrawer,\n      style: {\n        marginTop: 25\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), \" New Trip\"), React.createElement(Drawer, {\n      title: \"Create a new trip\",\n      width: 720,\n      onClose: this.onClose,\n      visible: this.state.visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Form, {\n      layout: \"vertical\",\n      hideRequiredMark: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Row, {\n      gutter: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, getFieldDecorator('name', {\n      rules: [{\n        required: true,\n        message: 'Location'\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"Enter place of visit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Dates of Travel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, getFieldDecorator('dateTime', {\n      rules: [{\n        required: true,\n        message: 'Please choose the dateTime'\n      }]\n    })(React.createElement(DatePicker.RangePicker, {\n      style: {\n        width: '100%'\n      },\n      getPopupContainer: trigger => trigger.parentNode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      gutter: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Purpose\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, getFieldDecorator('purpose', {\n      rules: [{\n        required: true,\n        message: 'Enter purpose and nature of the trip'\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"Enter purpose and nature of the trip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Approver\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, getFieldDecorator('approver', {\n      rules: [{\n        required: true,\n        message: 'Please choose the approver'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Please choose the approver\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"jack\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Jack Ma\"), React.createElement(Option, {\n      value: \"tom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Tom Liu\")))))), React.createElement(Row, {\n      gutter: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Expenses Included\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, getFieldDecorator('description', {\n      rules: [{\n        required: true,\n        message: 'please enter url description'\n      }]\n    })(React.createElement(Checkbox, {\n      indeterminate: this.state.indeterminate,\n      onChange: this.onCheckAllChange,\n      checked: this.state.checkAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"All\")), React.createElement(CheckboxGroup, {\n      options: plainOptions,\n      value: this.state.checkedList,\n      onChange: this.onChange,\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        left: 0,\n        bottom: 0,\n        width: '100%',\n        borderTop: '1px solid #e9e9e9',\n        padding: '10px 16px',\n        background: '#fff',\n        textAlign: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.onClose,\n      style: {\n        marginRight: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.onClose,\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nconst TripForm = Form.create()(TripFormComp);\nexport default TripForm;","map":{"version":3,"sources":["C:\\Users\\Admin\\Desktop\\cash-back\\web\\src\\Components\\TripsForm.js"],"names":["React","Drawer","Form","Button","Col","Row","Input","Select","DatePicker","Icon","Avatar","Card","Checkbox","CheckboxGroup","Group","Option","plainOptions","defaultCheckedList","TripFormComp","Component","state","visible","checkedList","indeterminate","checkAll","onChange","setState","length","onCheckAllChange","e","target","checked","showDrawer","onClose","render","getFieldDecorator","props","form","width","marginTop","rules","required","message","trigger","parentNode","display","flexDirection","position","left","bottom","borderTop","padding","background","textAlign","marginRight","TripForm","create"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Drawer, Form, Button, Col, Row, Input, Select, DatePicker, Icon, Avatar, Card} from 'antd';\r\nimport { Checkbox } from 'antd';\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\nconst { Option } = Select;\r\nconst plainOptions = ['Breakfast', 'Lunch', 'Dinner', 'Flights', 'In-city Public Transport', 'In-city Private Transport',\r\n'Drinks (Social)'];\r\nconst defaultCheckedList = ['Breakfast']\r\nclass TripFormComp extends React.Component {\r\n    state = {\r\n        visible: false,\r\n        checkedList: defaultCheckedList,\r\n        indeterminate: true,\r\n        checkAll: false,\r\n    };\r\n\r\n    onChange = checkedList => {\r\n        this.setState({\r\n            checkedList,\r\n            indeterminate: !!checkedList.length && checkedList.length < plainOptions.length,\r\n            checkAll: checkedList.length === plainOptions.length,\r\n        });\r\n    };\r\n\r\n    onCheckAllChange = e => {\r\n        this.setState({\r\n            checkedList: e.target.checked ? plainOptions : [],\r\n            indeterminate: false,\r\n            checkAll: e.target.checked,\r\n        });\r\n    };\r\n\r\n    showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div style={{width:\"fit-content\"}}>\r\n                <Button type=\"primary\" onClick={this.showDrawer} style={{marginTop:25}}>\r\n                    <Icon type=\"plus\" /> New Trip\r\n                </Button>\r\n                <Drawer\r\n                    title=\"Create a new trip\"\r\n                    width={720}\r\n                    onClose={this.onClose}\r\n                    visible={this.state.visible}\r\n                >\r\n                    <Form layout=\"vertical\" hideRequiredMark>\r\n                        <Row gutter={16}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Location\">\r\n                                    {getFieldDecorator('name', {\r\n                                        rules: [{ required: true, message: 'Location' }],\r\n                                    })(<Input placeholder=\"Enter place of visit\" />)}\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Dates of Travel\">\r\n                                    {getFieldDecorator('dateTime', {\r\n                                        rules: [{ required: true, message: 'Please choose the dateTime' }],\r\n                                    })(\r\n                                        <DatePicker.RangePicker\r\n                                            style={{ width: '100%' }}\r\n                                            getPopupContainer={trigger => trigger.parentNode}\r\n                                        />,\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={16}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Purpose\">\r\n                                    {getFieldDecorator('purpose', {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Enter purpose and nature of the trip',\r\n                                            },\r\n                                        ],\r\n                                    })(<Input placeholder=\"Enter purpose and nature of the trip\" />)}\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Approver\">\r\n                                    {getFieldDecorator('approver', {\r\n                                        rules: [{ required: true, message: 'Please choose the approver' }],\r\n                                    })(\r\n                                        <Select placeholder=\"Please choose the approver\">\r\n                                            <Option value=\"jack\">Jack Ma</Option>\r\n                                            <Option value=\"tom\">Tom Liu</Option>\r\n                                        </Select>,\r\n                                    )}\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={16}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Expenses Included\">\r\n                                    {getFieldDecorator('description', {\r\n                                        rules: [\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'please enter url description',\r\n                                            },\r\n                                        ],\r\n                                    })(<Checkbox\r\n                                        indeterminate={this.state.indeterminate}\r\n                                        onChange={this.onCheckAllChange}\r\n                                        checked={this.state.checkAll} >\r\n                                        All\r\n                                    </Checkbox>\r\n\r\n                                    )}\r\n                                    <CheckboxGroup\r\n                                        options={plainOptions}\r\n                                        value={this.state.checkedList}\r\n                                        onChange={this.onChange}\r\n                                        style={{display:\"flex\", flexDirection:\"column\"}}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                    <div\r\n                        style={{\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            bottom: 0,\r\n                            width: '100%',\r\n                            borderTop: '1px solid #e9e9e9',\r\n                            padding: '10px 16px',\r\n                            background: '#fff',\r\n                            textAlign: 'right',\r\n                        }}\r\n                    >\r\n                        <Button onClick={this.onClose} style={{ marginRight: 8 }}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.onClose} type=\"primary\">\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst TripForm = Form.create()(TripFormComp);\r\nexport default TripForm;"]},"metadata":{},"sourceType":"module"}